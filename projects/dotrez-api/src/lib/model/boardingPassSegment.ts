/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { BoardingPassLeg } from './boardingPassLeg';
import { BoardingPassProgram } from './boardingPassProgram';
import { BoardingPassTransportationDesignator } from './boardingPassTransportationDesignator';
import { BoardingPassTransportationIdentifier } from './boardingPassTransportationIdentifier';
import { TransportationIdentifier } from './transportationIdentifier';


/**
 * Defines the boarding pass segment details.
 */
export interface BoardingPassSegment { 
    /**
     * The transportation designator details based on the legs.
     */
    readonly designator?: BoardingPassTransportationDesignator;
    /**
     * The name of the transportation company.
     */
    transportationName?: string;
    /**
     * The scheduled departure gate.
     */
    departureGate?: string;
    /**
     * The scheduled boaring time.
     */
    boardingTime?: Date;
    /**
     * The type of the current segment.
     */
    type?: BoardingPassSegment.TypeEnum;
    /**
     * Flag indicating if the segment is international.
     */
    international?: boolean;
    /**
     * The assigned passengers ticket number.
     */
    ticketNumber?: string;
    /**
     * The assigned infants ticket number.
     */
    infantTicketNumber?: string;
    /**
     * The ticket indicator.
     */
    ticketIndicator?: string;
    /**
     * The assigned to cabin of service.
     */
    cabinOfService?: string;
    /**
     * The assigned to class of service.
     */
    classOfService?: string;
    /**
     * The externals reference class of service.
     */
    externalClassOfService?: string;
    /**
     * The fare class name.
     */
    fareClassName?: string;
    /**
     * The product class name.
     */
    productClassName?: string;
    /**
     * The assigned external record locator.
     */
    externalRecordLocator?: string;
    /**
     * The applied passenger program if one existed.
     */
    program?: BoardingPassProgram;
    /**
     * Flag indicating if this segment has a infant.
     */
    hasInfant?: boolean;
    /**
     * The transportation identifier details about the segment.
     */
    identifier?: TransportationIdentifier;
    /**
     * The collection of legs.
     */
    legs?: Array<BoardingPassLeg>;
    /**
     * The external transportation identifier details about the segment.
     */
    externalIdentifier?: BoardingPassTransportationIdentifier;
}
export namespace BoardingPassSegment {
    export type TypeEnum = 'Normal' | 'CodeShareOperating' | 'CodeShareMarketing' | 'InterlineOutbound' | 'InterlineInbound' | 'Passive';
}
