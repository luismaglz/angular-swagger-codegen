/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { FeeRule } from './feeRule';
import { RegionFee } from './regionFee';


/**
 * Fee detail model.
 */
export interface FeeDetail { 
    /**
     * Gets or sets the fee option number of this fee option.
     */
    number?: number;
    /**
     * Gets or sets the fee rules for this fee option.
     */
    feeRules?: Array<FeeRule>;
    /**
     * Gets or sets the name for this fee option.
     */
    name?: string;
    /**
     * Gets or sets the region fees for this fee option.
     */
    regionFees?: Array<RegionFee>;
    /**
     * Gets or sets the override of how to apply the taxes.
     */
    taxApplicationOverride?: FeeDetail.TaxApplicationOverrideEnum;
    /**
     * Gets or sets the override for the travel component.
     */
    travelComponentOverride?: FeeDetail.TravelComponentOverrideEnum;
    /**
     * Gets or sets the flag for using the overrides.
     */
    useOverrides?: boolean;
    /**
     * Gets or sets the override for where to apply this fee option.
     */
    feeApplicationOverride?: FeeDetail.FeeApplicationOverrideEnum;
}
export namespace FeeDetail {
    export type TaxApplicationOverrideEnum = 'Unknown' | 'Taxable' | 'TaxableLocal' | 'NonTaxable' | 'NonTaxableApplyToBaseFareOnly' | 'TaxableByTrip' | 'TaxableByItinerary';
    export const TaxApplicationOverrideEnum = {
        Unknown: 'Unknown' as TaxApplicationOverrideEnum,
        Taxable: 'Taxable' as TaxApplicationOverrideEnum,
        TaxableLocal: 'TaxableLocal' as TaxApplicationOverrideEnum,
        NonTaxable: 'NonTaxable' as TaxApplicationOverrideEnum,
        NonTaxableApplyToBaseFareOnly: 'NonTaxableApplyToBaseFareOnly' as TaxApplicationOverrideEnum,
        TaxableByTrip: 'TaxableByTrip' as TaxApplicationOverrideEnum,
        TaxableByItinerary: 'TaxableByItinerary' as TaxApplicationOverrideEnum
    };
    export type TravelComponentOverrideEnum = 'Unknown' | 'Itinerary' | 'Trip' | 'Journey' | 'Segment' | 'Leg' | 'ItineraryWithJourneySalesDate' | 'TripWithJourneySalesDate' | 'JourneyWithBookingSalesDate' | 'JourneyWithJourneySalesDate' | 'SegmentWithJourneySalesDate' | 'LegWithJourneySalesDate' | 'Fare';
    export const TravelComponentOverrideEnum = {
        Unknown: 'Unknown' as TravelComponentOverrideEnum,
        Itinerary: 'Itinerary' as TravelComponentOverrideEnum,
        Trip: 'Trip' as TravelComponentOverrideEnum,
        Journey: 'Journey' as TravelComponentOverrideEnum,
        Segment: 'Segment' as TravelComponentOverrideEnum,
        Leg: 'Leg' as TravelComponentOverrideEnum,
        ItineraryWithJourneySalesDate: 'ItineraryWithJourneySalesDate' as TravelComponentOverrideEnum,
        TripWithJourneySalesDate: 'TripWithJourneySalesDate' as TravelComponentOverrideEnum,
        JourneyWithBookingSalesDate: 'JourneyWithBookingSalesDate' as TravelComponentOverrideEnum,
        JourneyWithJourneySalesDate: 'JourneyWithJourneySalesDate' as TravelComponentOverrideEnum,
        SegmentWithJourneySalesDate: 'SegmentWithJourneySalesDate' as TravelComponentOverrideEnum,
        LegWithJourneySalesDate: 'LegWithJourneySalesDate' as TravelComponentOverrideEnum,
        Fare: 'Fare' as TravelComponentOverrideEnum
    };
    export type FeeApplicationOverrideEnum = 'Pnr' | 'TravelComponent' | 'EachPassenger' | 'EachPassengerTravelComponent' | 'SpecifyPassenger' | 'AllPaxCheckingBagsTogether' | 'PerBookingNoLimit';
    export const FeeApplicationOverrideEnum = {
        Pnr: 'Pnr' as FeeApplicationOverrideEnum,
        TravelComponent: 'TravelComponent' as FeeApplicationOverrideEnum,
        EachPassenger: 'EachPassenger' as FeeApplicationOverrideEnum,
        EachPassengerTravelComponent: 'EachPassengerTravelComponent' as FeeApplicationOverrideEnum,
        SpecifyPassenger: 'SpecifyPassenger' as FeeApplicationOverrideEnum,
        AllPaxCheckingBagsTogether: 'AllPaxCheckingBagsTogether' as FeeApplicationOverrideEnum,
        PerBookingNoLimit: 'PerBookingNoLimit' as FeeApplicationOverrideEnum
    };
}
