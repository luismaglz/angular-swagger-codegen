/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * The market model.
 */
export interface Market {
  /**
   * The starting location code for this market.
   */
  locationCode: string;
  /**
   * The earliest check in from travel location for this market.
   */
  earliestCheckInFrom?: number;
  /**
   * The earliest check in to travel location for this market.
   */
  earliestCheckInTo?: number;
  /**
   * The inactive flag for this market.
   */
  inActive?: boolean;
  /**
   * The directions where taxes and fees are included in this market.
   */
  includesTaxesAndFees?: Market.IncludesTaxesAndFeesEnum;
  /**
   * The latest check in from travel location for this market.
   */
  latestCheckInFrom?: number;
  /**
   * The latest check in to travel location for this market.
   */
  latestCheckInTo?: number;
  /**
   * The location type of the starting location for this market.
   */
  locationType?: Market.LocationTypeEnum;
  /**
   * The market rules for requiring travel documents for this market.
   */
  travelDocsRequired?: Market.TravelDocsRequiredEnum;
  /**
   * The ending location code for this market.
   */
  travelLocationCode: string;
  /**
   * The location type of the ending location for this market.
   */
  travelLocationType?: Market.TravelLocationTypeEnum;
}
export namespace Market {
  export type IncludesTaxesAndFeesEnum = "None" | "To" | "From" | "Between";
  export type LocationTypeEnum = "Undefined" | "Station" | "Mac";
  export type TravelDocsRequiredEnum =
    | "None"
    | "FromTravel"
    | "ToTravel"
    | "BothTravel"
    | "BothOverride"
    | "FromOverride"
    | "ToOverride"
    | "ToTravelToOverride"
    | "ToTravelBothOverride"
    | "ToTravelFromOverride"
    | "FromTravelToOverride"
    | "FromTravelBothOverride"
    | "FromTravelFromOverride"
    | "BothTravelToOverride"
    | "BothTravelBothOverride"
    | "BothTravelFromOverride";
  export type TravelLocationTypeEnum = "Undefined" | "Station" | "Mac";
}
