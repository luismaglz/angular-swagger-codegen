/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Defines all the different ways the availability response can be filtered.
 */
export interface AvailabilityCriteriaFilter {
  /**
   * Defines the type of fares to be included in the response.
   */
  fareInclusionType?: AvailabilityCriteriaFilter.FareInclusionTypeEnum;
  /**
   * The class compression type.
   */
  compressionType?: AvailabilityCriteriaFilter.CompressionTypeEnum;
  /**
   * The max fare price.
   */
  maxPrice?: number;
  /**
   * The min fare price.
   */
  minPrice?: number;
  /**
   * Filters fares based on loyalty.
   */
  loyalty?: AvailabilityCriteriaFilter.LoyaltyEnum;
  /**
   * Flag indicating to include allotted fare classes of service.
   */
  includeAllotments?: boolean;
  /**
   * Filters the type of journeys to return.
   */
  exclusionType?: AvailabilityCriteriaFilter.ExclusionTypeEnum;
  /**
   * The list of inventory journey sort options, used for filtering journeys on the response.
   */
  sortOptions?: Array<AvailabilityCriteriaFilter.SortOptionsEnum>;
  /**
   * The list of product class codes to filter with.
   */
  productClasses?: Array<string>;
  /**
   * The list of travel class codes to filter with.
   */
  travelClasses?: Array<string>;
  /**
   * The list of fare types.
   */
  fareTypes?: Array<string>;
  /**
   * The list of classes of service.
   */
  classesOfService?: Array<string>;
  /**
   * The desired carrier code.
   */
  carrierCode?: string;
  /**
   * The desired identifier number.
   */
  identifier?: string;
  /**
   * The type filtering based on connections.
   */
  type?: AvailabilityCriteriaFilter.TypeEnum;
  /**
   * Specifies the type of sold as connection when segment connects with passive segment.
   */
  connectionType?: AvailabilityCriteriaFilter.ConnectionTypeEnum;
  /**
   * The number of max connections.
   */
  maxConnections?: number;
}
export namespace AvailabilityCriteriaFilter {
  export type FareInclusionTypeEnum =
    | "Default"
    | "Standby"
    | "Overbook"
    | "NoPricing";
  export type CompressionTypeEnum =
    | "LowestFareClass"
    | "CompressByProductClass"
    | "Default";
  export type LoyaltyEnum =
    | "MonetaryOnly"
    | "PointsOnly"
    | "PointsAndMonetary"
    | "PreserveCurrent";
  export type ExclusionTypeEnum =
    | "Default"
    | "ExcludeDeparted"
    | "ExcludeImminent"
    | "ExcludeUnavailable";
  export type SortOptionsEnum =
    | "ServiceType"
    | "ShortestTravelTime"
    | "LowestFare"
    | "HighestFare"
    | "EarliestDeparture"
    | "LatestDeparture"
    | "EarliestArrival"
    | "LatestArrival"
    | "NoSort"
    | "BiasOnlineCommercialDuplicates"
    | "JourneyNumber";
  export type TypeEnum =
    | "None"
    | "NonStop"
    | "Through"
    | "Direct"
    | "Connect"
    | "All";
  export type ConnectionTypeEnum =
    | "None"
    | "Domestic"
    | "International"
    | "Both";
}
