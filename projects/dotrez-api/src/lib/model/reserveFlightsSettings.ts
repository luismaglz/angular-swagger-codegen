/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * The booking reserve flight settings.
 */
export interface ReserveFlightsSettings { 
    /**
     * Time limit for availability departure from current date and time.
     */
    availabilityDepartureTimeLimit?: string;
    /**
     * Time indicating when flights cannot depart or return from current date and time.
     */
    availabilityMaxDaysOut?: string;
    /**
     * Time indicating when flights cannot be booked/sold from current date and time.
     */
    sellDepartureTimeLimit?: string;
    /**
     * The maximum available seats displayed.
     */
    availableSpaceDisplayMax?: number;
    /**
     * Number of flight time change tolerance minutes.
     */
    flightTimeChangeToleranceMinutes?: number;
    /**
     * Flag indicating if whether the agent is allowed to view aircraft capacity.
     */
    viewCapacity?: boolean;
    /**
     * Flag indicating whether the agent is allowed to view aircraft lid and seats sold counts.
     */
    viewLidSold?: boolean;
    /**
     * Flag indicating whether the agent is allowed to view ssr availability.
     */
    viewSsrAvailability?: boolean;
    /**
     * Indicator whether the agent is allowed to view manifest.
     */
    viewManifestControl?: ReserveFlightsSettings.ViewManifestControlEnum;
    /**
     * Indicator on permissions for AdHoc flight operations.
     */
    adHocFlightControl?: ReserveFlightsSettings.AdHocFlightControlEnum;
    /**
     * Indicator whether the agent is allowed to overbook except on moves.
     */
    allowSellOverbook?: ReserveFlightsSettings.AllowSellOverbookEnum;
    /**
     * Indicator whether the agent is allowed to overbook on move only.
     */
    allowMoveOverbook?: ReserveFlightsSettings.AllowMoveOverbookEnum;
    /**
     * Indicator whether the agent is allowed to overbook on move only.
     */
    allowUpgradeOverbook?: ReserveFlightsSettings.AllowUpgradeOverbookEnum;
    /**
     * Flag indicating whether the agent allows split-journey moves.
     */
    allowSplitJourneyMoves?: boolean;
    /**
     * Indicator whether the agent is allowed to move a passenger from a flight to another without repricing.
     */
    allowMove?: ReserveFlightsSettings.AllowMoveEnum;
    /**
     * Flag indicating if move by maximum class availability.
     */
    moveByMaximumClassAvailability?: boolean;
    /**
     * Flag indicating if same city pairs are required on move.
     */
    requireSameCityPairOnMoves?: boolean;
    /**
     * They number of days that are allowed to move forward.
     */
    maxMoveDaysForward?: string;
    /**
     * The number of days that are allowed to move backwards.
     */
    maxMoveDaysBack?: string;
    /**
     * The number of days before IROP.
     */
    daysBeforeIrop?: string;
    /**
     * Flag indicating whether the agent is allowed to override the fare.
     */
    allowFareOverride?: boolean;
    /**
     * Flag indicating whether the agent is allowed to override the fare of a closed or flown flight.
     */
    allowClosedFlightFareOverride?: boolean;
    /**
     * Flag indicating whether the agent is allowed to override the fare of a closed or flown flight.
     */
    allowFareOverrideDuringDivide?: boolean;
    /**
     * Flag indicating whether the agent is allowed to ignore fare restrictions on end record.
     */
    allowIgnoreRestrictions?: boolean;
    /**
     * Flag indicating whether the agent is allowed to End record with an invalid price.
     */
    allowInvalidPriceStatus?: boolean;
    /**
     * Denotes the time before departure when an agent can no longer change/cancel a flight.
     */
    cancelDepartureTimeLimit?: string;
    /**
     * Denotes the time before departure when an agent can no longer change/cancel a flight.
     */
    seatAssignmentTimeLimit?: string;
    /**
     * Flag indicating if upgrades are allowed.
     */
    allowUpgrade?: boolean;
    /**
     * Flag indicating if AdHoc is allowed.
     */
    allowCreateAdhocConnect?: boolean;
    /**
     * Flag indicating whether the minimum time between flights setting timespan is to be enforced.
     */
    minimumTimeBetweenFlightsEnforcement?: boolean;
    /**
     * Denotes the time before departure when an agent can no longer change/cancel a flight.
     */
    upgradeDepartureTimeLimit?: string;
    /**
     * Denotes the time before departure the agent can start offering cabin upgrades.
     */
    upgradeCabinStartOffset?: string;
    /**
     * Denotes the minimum time between flights allowed.
     */
    minimumTimeBetweenFlights?: string;
    /**
     * Flag indicating whether or not flight times on unmanaged records are overwritten.
     */
    modifyPassiveSegmentTimes?: boolean;
    /**
     * Flag indicating whether or not to support selling of overlapping flights across all booking channels.
     */
    allowSellOfFlightOverlap?: boolean;
    /**
     * Cannot book flights whose departure or return date exceeds date.
     */
    availabilityMaxDate?: Date;
    /**
     * Controls which type of fare overrides are allowed by a role.
     */
    allowedFareOverrideType?: ReserveFlightsSettings.AllowedFareOverrideTypeEnum;
    /**
     * Flag indicating whether or not to allow a trip move for the initial (non-committed) booking.
     */
    allowMoveOnInitialBooking?: boolean;
}
export namespace ReserveFlightsSettings {
    export type ViewManifestControlEnum = 'None' | 'StandbyOnly' | 'Full';
    export type AdHocFlightControlEnum = 'None' | 'View' | 'Sell';
    export type AllowSellOverbookEnum = 'CannotOverbook' | 'CanOverbookClass' | 'CanOverbookNest' | 'CanOverbookLeg';
    export type AllowMoveOverbookEnum = 'CannotOverbook' | 'CanOverbookClass' | 'CanOverbookNest' | 'CanOverbookLeg';
    export type AllowUpgradeOverbookEnum = 'CannotOverbook' | 'CanOverbookClass' | 'CanOverbookNest' | 'CanOverbookLeg';
    export type AllowMoveEnum = 'NotAllowed' | 'AllowedOnInventory' | 'Allowed';
    export type AllowedFareOverrideTypeEnum = 'DiscountedPrice' | 'PublishedPrice' | 'All';
}
