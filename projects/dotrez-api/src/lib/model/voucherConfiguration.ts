/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { VoucherConfigurationFareClass } from "./voucherConfigurationFareClass";
import { VoucherMarketRestriction } from "./voucherMarketRestriction";
import { VoucherTravelRestriction } from "./voucherTravelRestriction";

/**
 * The voucher configuration model.
 */
export interface VoucherConfiguration {
  /**
   * The voucher configuration code.
   */
  configurationCode: string;
  /**
   * The voucher configuration note.
   */
  note?: string;
  /**
   * The voucher configuration name.
   */
  name: string;
  /**
   * The voucher configuration description.
   */
  description: string;
  /**
   * The voucher type.
   */
  type: VoucherConfiguration.TypeEnum;
  /**
   * The issuance type.
   */
  issuanceType: VoucherConfiguration.IssuanceTypeEnum;
  /**
   * The voucher usage types.
   */
  usageTypes?: Array<VoucherConfiguration.UsageTypesEnum>;
  /**
   * The voucher trip type.
   */
  tripType?: VoucherConfiguration.TripTypeEnum;
  /**
   * The voucher expiration control.
   */
  expirationControl?: VoucherConfiguration.ExpirationControlEnum;
  /**
   * The voucher expiration type.
   */
  expirationType: VoucherConfiguration.ExpirationTypeEnum;
  /**
   * The voucher expiration days.
   */
  expirationDays?: number;
  /**
   * The voucher amount control.
   */
  amountControl?: VoucherConfiguration.AmountControlEnum;
  /**
   * The voucher calculated amount control.
   */
  calculatedAmountControl?: VoucherConfiguration.CalculatedAmountControlEnum;
  /**
   * The voucher maximum passenger total.
   */
  maximumPassengers?: number;
  /**
   * The voucher maximum number of vouchers per booking.
   */
  maximumVouchersPerBooking?: number;
  /**
   * The voucher day of week travel restrictions.
   */
  travelDowRestriction?: Array<VoucherConfiguration.TravelDowRestrictionEnum>;
  /**
   * The voucher name restriction.
   */
  nameRestriction?: VoucherConfiguration.NameRestrictionEnum;
  /**
   * The flag to indicate if a record locator is required.
   */
  isRecordLocatorRequired?: boolean;
  /**
   * The flag to indicate if a customer number is required.
   */
  isCustomerNumberRequired?: boolean;
  /**
   * The next reference number for the voucher configuration.
   */
  nextReferenceNumber?: number;
  /**
   * Flag to indicate if the maximum amount is per passenger or not.
   */
  maximumAmountIsPerPassenger?: boolean;
  /**
   * The calculated percentage.
   */
  calculatedPercentage?: number;
  /**
   * The voucher issuance control.
   */
  issuanceControl?: VoucherConfiguration.IssuanceControlEnum;
  /**
   * The voucher configuration fare classes.
   */
  fareClasses?: Array<VoucherConfigurationFareClass>;
  /**
   * The voucher configuration market restrictions.
   */
  marketRestrictions?: Array<VoucherMarketRestriction>;
  /**
   * The voucher configuration travel restrictions.
   */
  travelRestrictions?: Array<VoucherTravelRestriction>;
  /**
   * The voucher expiration date.
   */
  expiration?: Date;
  /**
   * The voucher currency code.
   */
  currencyCode?: string;
  /**
   * The maximum voucher amount.
   */
  maximumAmount?: number;
}
export namespace VoucherConfiguration {
  export type TypeEnum =
    | "Credit"
    | "SingleUseCredit"
    | "Service"
    | "SingleUse"
    | "MultiUse"
    | "SingleUseNegativeAdjustment";
  export type IssuanceTypeEnum =
    | "Individual"
    | "Batch"
    | "FlightBatch"
    | "HighVolumeBatch"
    | "OdBatch";
  export type UsageTypesEnum =
    | "None"
    | "Fares"
    | "Taxes"
    | "TravelFees"
    | "ServiceFees"
    | "PenaltyFees"
    | "SsrFees"
    | "NonFlightServiceFees"
    | "UpgradeFees"
    | "SeatFees"
    | "SpoilageFees"
    | "NameChangeFees"
    | "ConvenienceFees"
    | "Car"
    | "Hotel"
    | "Insurance"
    | "Activities";
  export type TripTypeEnum = "Any" | "OneWay" | "RoundTrip" | "None";
  export type ExpirationControlEnum =
    | "None"
    | "Fixed"
    | "FixedAtIssuance"
    | "Calculated";
  export type ExpirationTypeEnum =
    | "TravelBy"
    | "TravelCompleteBy"
    | "BookingBy";
  export type AmountControlEnum = "Fixed" | "FixedAtIssuance" | "Calculated";
  export type CalculatedAmountControlEnum =
    | "Default"
    | "Fares"
    | "FaresPlusTaxes";
  export type TravelDowRestrictionEnum =
    | "None"
    | "Monday"
    | "Tuesday"
    | "Wednesday"
    | "Thursday"
    | "Friday"
    | "Saturday"
    | "Sunday";
  export type NameRestrictionEnum =
    | "None"
    | "MustBePassenger"
    | "MustBePassengerOrContact";
  export type IssuanceControlEnum = "IssuedToPassengers" | "IssuedToContact";
}
