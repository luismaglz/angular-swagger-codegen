/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Leg } from './leg';
import { TransportationDesignator } from './transportationDesignator';
import { TransportationIdentifier } from './transportationIdentifier';


/**
 * Availability segment defines segment information before being booked.
 */
import * as Enums from '../enums';

export interface AvailabilitySegment { 
    /**
     * Represents the blocked status of the segment.
     */
    readonly isBlocked?: boolean;
    /**
     * Represents the hosted status of the segment.
     */
    readonly isHosted?: boolean;
    /**
     * Represents the change of gauge status of the segment.
     */
    readonly isChangeOfGauge?: boolean;
    /**
     * This is a summarry of all the legs on the segment. It will contain the details  of the transportation from the first and last leg.
     */
    readonly designator?: TransportationDesignator;
    /**
     * Indicates if the seatmaps associated with the segment are viewable.
     */
    readonly isSeatmapViewable?: boolean;
    /**
     * The unique identifier for this segment sell information.
     */
    segmentKey?: string;
    /**
     * The transportation identifier.
     */
    identifier?: TransportationIdentifier;
    /**
     * The cabin of service.
     */
    cabinOfService?: string;
    /**
     * The external transportation identifier.
     */
    externalIdentifier?: TransportationIdentifier;
    /**
     * The change reason code.
     */
    changeReasonCode?: Enums.ChangeReasonCodes;
    /**
     * The type of the segment.
     */
    segmentType?: Enums.SegmentTypes;
    /**
     * The value indicating if this segment is international.
     */
    international?: boolean;
    /**
     * The legs.
     */
    legs?: Array<Leg>;
}
