/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { MarketInformation } from './marketInformation';


/**
 * Represents the travel summary information.
 */

    import { TravelSummary<CAP>status</CAP> } from '../types/enums';

export interface TravelSummary { 
    /**
     * Status of the flight summary.
     */
    status?: <ENUM>'Normal'|'Closed'|'Canceled'|'Suspended'|'ClosedPending'|'BlockAllActivities'|'Mishap'</ENUM>;
    /**
     * Number of the flight.
     */
    number?: string;
    /**
     * Scheduled departure time.
     */
    scheduledDepartureTime?: Date;
    /**
     * Scheduled arrival time.
     */
    scheduledArrivalTime?: Date;
    /**
     * Estimated departure time.
     */
    estimatedDepartureTime?: Date;
    /**
     * Estimated arrival time.
     */
    estimatedArrivalTime?: Date;
    /**
     * Actual departure time.
     */
    actualDepartureTime?: Date;
    /**
     * Actual arrival time.
     */
    actualArrivalTime?: Date;
    /**
     * Departure LTV time offset in minutes.  To convert from Local time to UTC time you would  need to subtract this value for the current local time.
     */
    departureLtv?: number;
    /**
     * Arrival LTV time offset in minutes.  To convert from Local time to UTC time you would  need to subtract this value for the current local time.
     */
    arrivalLtv?: number;
    /**
     * Equipment type.
     */
    equipmentType?: string;
    /**
     * Equipment type suffix.
     */
    equipmentTypeSuffix?: string;
    /**
     * Marketing configuration code.
     */
    marketingConfigurationCode?: string;
    /**
     * Sales configuration code.
     */
    salesConfigurationCode?: string;
    /**
     * InventoryLegKey about the flight.
     */
    market?: MarketInformation;
}
