/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { VoucherConfigurationFareClass } from './voucherConfigurationFareClass';
import { VoucherMarketRestriction } from './voucherMarketRestriction';
import { VoucherTravelRestriction } from './voucherTravelRestriction';


/**
 * The voucher configuration model.
 */

    import { VoucherConfiguration<CAP>type</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>issuanceType</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>usageTypes</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>tripType</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>expirationControl</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>expirationType</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>amountControl</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>calculatedAmountControl</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>travelDowRestriction</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>nameRestriction</CAP> } from '../types/enums';
    import { VoucherConfiguration<CAP>issuanceControl</CAP> } from '../types/enums';

export interface VoucherConfiguration { 
    /**
     * The voucher configuration code.
     */
    configurationCode: string;
    /**
     * The voucher configuration note.
     */
    note?: string;
    /**
     * The voucher configuration name.
     */
    name: string;
    /**
     * The voucher configuration description.
     */
    description: string;
    /**
     * The voucher type.
     */
    type: <ENUM>'Credit'|'SingleUseCredit'|'Service'|'SingleUse'|'MultiUse'|'SingleUseNegativeAdjustment'</ENUM>;
    /**
     * The issuance type.
     */
    issuanceType: <ENUM>'Individual'|'Batch'|'FlightBatch'|'HighVolumeBatch'|'OdBatch'</ENUM>;
    /**
     * The voucher usage types.
     */
    usageTypes?: <ENUM>'None'|'Fares'|'Taxes'|'TravelFees'|'ServiceFees'|'PenaltyFees'|'SsrFees'|'NonFlightServiceFees'|'UpgradeFees'|'SeatFees'|'SpoilageFees'|'NameChangeFees'|'ConvenienceFees'|'Car'|'Hotel'|'Insurance'|'Activities'</ENUM>;
    /**
     * The voucher trip type.
     */
    tripType?: <ENUM>'Any'|'OneWay'|'RoundTrip'|'None'</ENUM>;
    /**
     * The voucher expiration control.
     */
    expirationControl?: <ENUM>'None'|'Fixed'|'FixedAtIssuance'|'Calculated'</ENUM>;
    /**
     * The voucher expiration type.
     */
    expirationType: <ENUM>'TravelBy'|'TravelCompleteBy'|'BookingBy'</ENUM>;
    /**
     * The voucher expiration days.
     */
    expirationDays?: number;
    /**
     * The voucher amount control.
     */
    amountControl?: <ENUM>'Fixed'|'FixedAtIssuance'|'Calculated'</ENUM>;
    /**
     * The voucher calculated amount control.
     */
    calculatedAmountControl?: <ENUM>'Default'|'Fares'|'FaresPlusTaxes'</ENUM>;
    /**
     * The voucher maximum passenger total.
     */
    maximumPassengers?: number;
    /**
     * The voucher maximum number of vouchers per booking.
     */
    maximumVouchersPerBooking?: number;
    /**
     * The voucher day of week travel restrictions.
     */
    travelDowRestriction?: <ENUM>'None'|'Monday'|'Tuesday'|'Wednesday'|'Thursday'|'Friday'|'Saturday'|'Sunday'</ENUM>;
    /**
     * The voucher name restriction.
     */
    nameRestriction?: <ENUM>'None'|'MustBePassenger'|'MustBePassengerOrContact'</ENUM>;
    /**
     * The flag to indicate if a record locator is required.
     */
    isRecordLocatorRequired?: boolean;
    /**
     * The flag to indicate if a customer number is required.
     */
    isCustomerNumberRequired?: boolean;
    /**
     * The next reference number for the voucher configuration.
     */
    nextReferenceNumber?: number;
    /**
     * Flag to indicate if the maximum amount is per passenger or not.
     */
    maximumAmountIsPerPassenger?: boolean;
    /**
     * The calculated percentage.
     */
    calculatedPercentage?: number;
    /**
     * The voucher issuance control.
     */
    issuanceControl?: <ENUM>'IssuedToPassengers'|'IssuedToContact'</ENUM>;
    /**
     * The voucher configuration fare classes.
     */
    fareClasses?: Array<VoucherConfigurationFareClass>;
    /**
     * The voucher configuration market restrictions.
     */
    marketRestrictions?: Array<VoucherMarketRestriction>;
    /**
     * The voucher configuration travel restrictions.
     */
    travelRestrictions?: Array<VoucherTravelRestriction>;
    /**
     * The voucher expiration date.
     */
    expiration?: Date;
    /**
     * The voucher currency code.
     */
    currencyCode?: string;
    /**
     * The maximum voucher amount.
     */
    maximumAmount?: number;
}
