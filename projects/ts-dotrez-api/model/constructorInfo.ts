/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { CustomAttributeData } from './customAttributeData';



    import { ConstructorInfo<CAP>memberType<CAP> } from '../models/enums';
    import { ConstructorInfo<CAP>methodImplementationFlags<CAP> } from '../models/enums';
    import { ConstructorInfo<CAP>attributes<CAP> } from '../models/enums';
    import { ConstructorInfo<CAP>callingConvention<CAP> } from '../models/enums';

export interface ConstructorInfo { 
    readonly memberType?: ConstructorInfo<CAP>memberType<CAP>;
    readonly methodImplementationFlags?: ConstructorInfo<CAP>methodImplementationFlags<CAP>;
    readonly methodHandle?: any;
    readonly attributes?: ConstructorInfo<CAP>attributes<CAP>;
    readonly callingConvention?: ConstructorInfo<CAP>callingConvention<CAP>;
    readonly isGenericMethodDefinition?: boolean;
    readonly containsGenericParameters?: boolean;
    readonly isGenericMethod?: boolean;
    readonly isSecurityCritical?: boolean;
    readonly isSecuritySafeCritical?: boolean;
    readonly isSecurityTransparent?: boolean;
    readonly isPublic?: boolean;
    readonly isPrivate?: boolean;
    readonly isFamily?: boolean;
    readonly isAssembly?: boolean;
    readonly isFamilyAndAssembly?: boolean;
    readonly isFamilyOrAssembly?: boolean;
    readonly isStatic?: boolean;
    readonly isFinal?: boolean;
    readonly isVirtual?: boolean;
    readonly isHideBySig?: boolean;
    readonly isAbstract?: boolean;
    readonly isSpecialName?: boolean;
    readonly isConstructor?: boolean;
    readonly name?: string;
    readonly declaringType?: string;
    readonly reflectedType?: string;
    readonly customAttributes?: Array<CustomAttributeData>;
    readonly metadataToken?: number;
    readonly module?: any;
}
