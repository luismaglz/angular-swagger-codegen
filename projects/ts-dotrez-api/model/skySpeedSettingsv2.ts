/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * Settings for Sky Speed.
 */

    import { SkySpeedSettingsv2<CAP>manifestViewDate</CAP> } from '../models/enums';
    import { SkySpeedSettingsv2<CAP>postalCodeLookup</CAP> } from '../models/enums';

export interface SkySpeedSettingsv2 { 
    /**
     * Disables base currency when searching flights.
     */
    disableBaseCurrency?: boolean;
    /**
     * The value to indicate what type of date to display in the SkySpeed manifest view.
     */
    manifestViewDate?: SkySpeedSettingsv2<CAP>manifestViewDate</CAP>;
    /**
     * Disables outbound time when searching flights.
     */
    disableOutboundTime?: boolean;
    /**
     * The value to indicate the maximum number of TTY messages  per batch for deletion.
     */
    maximumNumberOfTtyMessagesPerBatchForDeletion?: number;
    /**
     * Excludes the outbound time from tab order.
     */
    excludeOutboundTimeTab?: boolean;
    /**
     * The value to indicate the manner in which postal codes will be looked up  in SkySpeed.
     */
    postalCodeLookup?: SkySpeedSettingsv2<CAP>postalCodeLookup</CAP>;
    /**
     * Disables return time when searching flights.
     */
    disableReturnTime?: boolean;
    /**
     * The value to indicate the server name of the primary service.
     */
    serviceServerName?: number;
    /**
     * Excludes return time from tab order.
     */
    excludeReturnTimeTab?: boolean;
    /**
     * Enable check box to 'Show Only Fares Valid for Given Number of Passengers'.
     */
    enableShowValidFaresCheckbox?: boolean;
    /**
     * Indicates fare basis significance in regular booking mode.
     */
    fareBasisInRegularBooking?: number;
    /**
     * Indicates fare basis significance in overbook mode.
     */
    fareBasisInOverbook?: number;
    /**
     * Display the reserved flights dialog after reserving a flight.
     */
    displayReservedFlights?: boolean;
    /**
     * Display the SSR nest values.
     */
    displaySsrNestValues?: boolean;
    /**
     * Set cursor to customer id field in add name dialog.
     */
    defaultFocusToCustomerIdField?: boolean;
    /**
     * Allow comments to be deleted.
     */
    allowDeleteComments?: boolean;
    /**
     * Prompt to create SkySales user id after creating customer account.
     */
    promptCreateInternetUserId?: boolean;
    /**
     * Allow password management for customer accounts.
     */
    allowManagePasswordForCustomerAccount?: boolean;
    /**
     * View fare quote dialog.
     */
    viewFareQuote?: boolean;
    /**
     * Allow non carrier org to use other agency.
     */
    allowNonCarrierOrgToUseOtherAgency?: boolean;
    /**
     * View teletype processing dialog.
     */
    viewTeletypeProcessing?: boolean;
    /**
     * View GDS history dialog.
     */
    viewGdsHistoryDialog?: boolean;
    /**
     * Return date default to outbound date.
     */
    returnDateDefaultToOutboundDate?: boolean;
    /**
     * Display FYI notes on login.
     */
    displayFyiNotesOnLogin?: boolean;
    /**
     * Display resident country control.
     */
    displayResidentCountry?: boolean;
    /**
     * Display prices by passenger type (Restrict or Allow).
     */
    displayPricesByPassengerType?: Array<string>;
    /**
     * Default payment to the first credit card of the customer.
     */
    defaultToCustomerCreditCard?: boolean;
    /**
     * Force view mandatory comments on change booking.
     */
    forceViewMandatoryComments?: boolean;
    /**
     * Show travel document tab on the passengers screen.
     */
    showTravelDocumentsOnPassengersScreen?: boolean;
    /**
     * Show the destination address tab on the passengers screen.
     */
    showDestinationAddressesOnPassengersScreen?: boolean;
    /**
     * Show the frequent flyer number tab on the passengers screen.
     */
    showFrequentFlyerNumberOnPassengersScreen?: boolean;
    /**
     * Show the meal SSR button on the passengers screen.
     */
    showMealSsrButtonOnPassengersScreen?: boolean;
    /**
     * Allow e-ticketing.
     */
    allowETicketing?: boolean;
    /**
     * Allow fees to be deleted.
     */
    allowFeesToBeDeleted?: boolean;
    /**
     * Display reference number.
     */
    displayReferenceNumber?: boolean;
    /**
     * Enable loyalty customer account view.
     */
    enableLoyaltyCustomerAccountView?: boolean;
    /**
     * Enable loyalty fare display.
     */
    enableLoyaltyFareDisplay?: boolean;
    /**
     * Display e-ticket records.
     */
    displayETicketRecords?: boolean;
    /**
     * Allow e-ticket coupon status to be updated.
     */
    allowETicketCouponStatusToBeUpdated?: boolean;
    /**
     * Enable reprice button on the reserved flights screen.
     */
    enableRepriceButtonOnReservedFlightsScreen?: boolean;
    /**
     * Enable reprice button on the reserved flights screen.
     */
    enableSplitCancelButtonOnReservedFlightsScreen?: boolean;
    /**
     * Allow access to traveler notification dialogs.
     */
    allowTravelNotificationsAccess?: boolean;
    /**
     * Allow theme editor access.
     */
    allowThemeEditorAccess?: boolean;
    /**
     * Allow access to blacklist and retrieve reservations from the payment's window.
     */
    allowBlacklistAccessAndRetrieveReservationsFromPayments?: boolean;
    /**
     * Mask booking contact information.
     */
    maskBookingContactInformation?: boolean;
    /**
     * Access to flights with traffic restrictions.
     */
    accessToFlightsWithTrafficRestrictions?: boolean;
    /**
     * List of enabled ticket codes. Note: these are only the ticket codes that are marked  as true to display the ticket code details. Ticket codes that are marked false will  not be included in this list.
     */
    enabledTicketCodes?: Array<string>;
    /**
     * Pre-defined reservation comments.
     */
    reservationComments?: Array<string>;
    /**
     * Pre-defined itinerary comments.
     */
    itineraryComments?: Array<string>;
    /**
     * Pre-defined manifest comments.
     */
    manifestComments?: Array<string>;
}
