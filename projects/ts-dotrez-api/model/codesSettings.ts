/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { CodesSettingsAllowedPaymentMethodsForFraudPrevention } from './codesSettingsAllowedPaymentMethodsForFraudPrevention';
import { CodesSettingsExternalPaymentValidationOverrides } from './codesSettingsExternalPaymentValidationOverrides';
import { CodesSettingsPaymentFieldOverrides } from './codesSettingsPaymentFieldOverrides';
import { CodesSettingsQueueCategoryCodes } from './codesSettingsQueueCategoryCodes';


/**
 * The codes settings.
 */
export interface CodesSettings { 
    allowedPaymentMethodsForFraudPrevention?: CodesSettingsAllowedPaymentMethodsForFraudPrevention;
    /**
     * A list of classes that automatically move or nest on overbook.
     */
    automaticMoveNestOverbookClasses?: Array<string>;
    /**
     * A list of editable rule types.
     */
    editableRuleTypes?: Array<string>;
    externalPaymentValidationOverrides?: CodesSettingsExternalPaymentValidationOverrides;
    /**
     * A list of fee types that allow overrides. = ['All', 'Tax', 'TravelFee', 'ServiceFee', 'PaymentFee', 'PenaltyFee', 'SsrFee', 'NonFlightServiceFee', 'UpgradeFee', 'SeatFee', 'BaseFare', 'SpoilageFee', 'NameChangeFee', 'ConvenienceFee', 'BaggageFee', 'FareSurcharge', 'PromotionDiscount']
     */
    overrideFeeTypes?: Array<CodesSettings.OverrideFeeTypesEnum>;
    paymentFieldOverrides?: CodesSettingsPaymentFieldOverrides;
    /**
     * The permissions allowed on the private travel queue category for this role.
     */
    privateTravelQueueCategory?: CodesSettings.PrivateTravelQueueCategoryEnum;
    /**
     * The permissions allowed on the public travel queue category for this role.
     */
    publicTravelQueueCategory?: CodesSettings.PublicTravelQueueCategoryEnum;
    /**
     * A list of payment codes that allow refunds.
     */
    refundablePaymentMethodCodes?: Array<string>;
    /**
     * A list of fee types that are Spoilage Fees. = ['All', 'Tax', 'TravelFee', 'ServiceFee', 'PaymentFee', 'PenaltyFee', 'SsrFee', 'NonFlightServiceFee', 'UpgradeFee', 'SeatFee', 'BaseFare', 'SpoilageFee', 'NameChangeFee', 'ConvenienceFee', 'BaggageFee', 'FareSurcharge', 'PromotionDiscount']
     */
    spoilFeeTypes?: Array<CodesSettings.SpoilFeeTypesEnum>;
    /**
     * A list of allowed classes of service.
     */
    classOfServices?: Array<string>;
    /**
     * A list of allowed payment codes that are deposit payment types.
     */
    depositPaymentTypes?: Array<string>;
    /**
     * A list of allowed fare types.
     */
    fareTypes?: Array<string>;
    /**
     * A list of allowed passenger discount codes.
     */
    passengerDiscountCodes?: Array<string>;
    /**
     * A list of allowed passenger types.
     */
    passengerTypeCodes?: Array<string>;
    /**
     * A list of allowed payment method codes.
     */
    paymentMethodCodes?: Array<string>;
    /**
     * A list of penalty fee codes.
     */
    penaltyFeeCodes?: Array<string>;
    /**
     * A list of allowed product classes.
     */
    productClasses?: Array<string>;
    queueCategoryCodes?: CodesSettingsQueueCategoryCodes;
    /**
     * The allowed sell SSR Codes.
     */
    sellSsrCodes?: Array<string>;
    /**
     * The allowed service fee codes.
     */
    serviceFeeCodes?: Array<string>;
    /**
     * The class of services that are allowed standby.
     */
    standbyClassOfServiceCodes?: Array<string>;
    /**
     * The allowed station categories.
     */
    stationCategories?: Array<string>;
    /**
     * The list viewable seat properties.
     */
    viewableSeatProperties?: Array<string>;
    /**
     * The fee types that allow waiving. = ['All', 'Tax', 'TravelFee', 'ServiceFee', 'PaymentFee', 'PenaltyFee', 'SsrFee', 'NonFlightServiceFee', 'UpgradeFee', 'SeatFee', 'BaseFare', 'SpoilageFee', 'NameChangeFee', 'ConvenienceFee', 'BaggageFee', 'FareSurcharge', 'PromotionDiscount']
     */
    waiveFeeTypes?: Array<CodesSettings.WaiveFeeTypesEnum>;
}
export namespace CodesSettings {
    export type OverrideFeeTypesEnum = 'All' | 'Tax' | 'TravelFee' | 'ServiceFee' | 'PaymentFee' | 'PenaltyFee' | 'SsrFee' | 'NonFlightServiceFee' | 'UpgradeFee' | 'SeatFee' | 'BaseFare' | 'SpoilageFee' | 'NameChangeFee' | 'ConvenienceFee' | 'BaggageFee' | 'FareSurcharge' | 'PromotionDiscount' | 'ServiceBundle' | 'ExtraBagFee' | 'ATPCOBagFee';
    export const OverrideFeeTypesEnum = {
        All: 'All' as OverrideFeeTypesEnum,
        Tax: 'Tax' as OverrideFeeTypesEnum,
        TravelFee: 'TravelFee' as OverrideFeeTypesEnum,
        ServiceFee: 'ServiceFee' as OverrideFeeTypesEnum,
        PaymentFee: 'PaymentFee' as OverrideFeeTypesEnum,
        PenaltyFee: 'PenaltyFee' as OverrideFeeTypesEnum,
        SsrFee: 'SsrFee' as OverrideFeeTypesEnum,
        NonFlightServiceFee: 'NonFlightServiceFee' as OverrideFeeTypesEnum,
        UpgradeFee: 'UpgradeFee' as OverrideFeeTypesEnum,
        SeatFee: 'SeatFee' as OverrideFeeTypesEnum,
        BaseFare: 'BaseFare' as OverrideFeeTypesEnum,
        SpoilageFee: 'SpoilageFee' as OverrideFeeTypesEnum,
        NameChangeFee: 'NameChangeFee' as OverrideFeeTypesEnum,
        ConvenienceFee: 'ConvenienceFee' as OverrideFeeTypesEnum,
        BaggageFee: 'BaggageFee' as OverrideFeeTypesEnum,
        FareSurcharge: 'FareSurcharge' as OverrideFeeTypesEnum,
        PromotionDiscount: 'PromotionDiscount' as OverrideFeeTypesEnum,
        ServiceBundle: 'ServiceBundle' as OverrideFeeTypesEnum,
        ExtraBagFee: 'ExtraBagFee' as OverrideFeeTypesEnum,
        ATPCOBagFee: 'ATPCOBagFee' as OverrideFeeTypesEnum
    }
    export type PrivateTravelQueueCategoryEnum = 'None' | 'View' | 'All';
    export const PrivateTravelQueueCategoryEnum = {
        None: 'None' as PrivateTravelQueueCategoryEnum,
        View: 'View' as PrivateTravelQueueCategoryEnum,
        All: 'All' as PrivateTravelQueueCategoryEnum
    }
    export type PublicTravelQueueCategoryEnum = 'None' | 'View' | 'All';
    export const PublicTravelQueueCategoryEnum = {
        None: 'None' as PublicTravelQueueCategoryEnum,
        View: 'View' as PublicTravelQueueCategoryEnum,
        All: 'All' as PublicTravelQueueCategoryEnum
    }
    export type SpoilFeeTypesEnum = 'All' | 'Tax' | 'TravelFee' | 'ServiceFee' | 'PaymentFee' | 'PenaltyFee' | 'SsrFee' | 'NonFlightServiceFee' | 'UpgradeFee' | 'SeatFee' | 'BaseFare' | 'SpoilageFee' | 'NameChangeFee' | 'ConvenienceFee' | 'BaggageFee' | 'FareSurcharge' | 'PromotionDiscount' | 'ServiceBundle' | 'ExtraBagFee' | 'ATPCOBagFee';
    export const SpoilFeeTypesEnum = {
        All: 'All' as SpoilFeeTypesEnum,
        Tax: 'Tax' as SpoilFeeTypesEnum,
        TravelFee: 'TravelFee' as SpoilFeeTypesEnum,
        ServiceFee: 'ServiceFee' as SpoilFeeTypesEnum,
        PaymentFee: 'PaymentFee' as SpoilFeeTypesEnum,
        PenaltyFee: 'PenaltyFee' as SpoilFeeTypesEnum,
        SsrFee: 'SsrFee' as SpoilFeeTypesEnum,
        NonFlightServiceFee: 'NonFlightServiceFee' as SpoilFeeTypesEnum,
        UpgradeFee: 'UpgradeFee' as SpoilFeeTypesEnum,
        SeatFee: 'SeatFee' as SpoilFeeTypesEnum,
        BaseFare: 'BaseFare' as SpoilFeeTypesEnum,
        SpoilageFee: 'SpoilageFee' as SpoilFeeTypesEnum,
        NameChangeFee: 'NameChangeFee' as SpoilFeeTypesEnum,
        ConvenienceFee: 'ConvenienceFee' as SpoilFeeTypesEnum,
        BaggageFee: 'BaggageFee' as SpoilFeeTypesEnum,
        FareSurcharge: 'FareSurcharge' as SpoilFeeTypesEnum,
        PromotionDiscount: 'PromotionDiscount' as SpoilFeeTypesEnum,
        ServiceBundle: 'ServiceBundle' as SpoilFeeTypesEnum,
        ExtraBagFee: 'ExtraBagFee' as SpoilFeeTypesEnum,
        ATPCOBagFee: 'ATPCOBagFee' as SpoilFeeTypesEnum
    }
    export type WaiveFeeTypesEnum = 'All' | 'Tax' | 'TravelFee' | 'ServiceFee' | 'PaymentFee' | 'PenaltyFee' | 'SsrFee' | 'NonFlightServiceFee' | 'UpgradeFee' | 'SeatFee' | 'BaseFare' | 'SpoilageFee' | 'NameChangeFee' | 'ConvenienceFee' | 'BaggageFee' | 'FareSurcharge' | 'PromotionDiscount' | 'ServiceBundle' | 'ExtraBagFee' | 'ATPCOBagFee';
    export const WaiveFeeTypesEnum = {
        All: 'All' as WaiveFeeTypesEnum,
        Tax: 'Tax' as WaiveFeeTypesEnum,
        TravelFee: 'TravelFee' as WaiveFeeTypesEnum,
        ServiceFee: 'ServiceFee' as WaiveFeeTypesEnum,
        PaymentFee: 'PaymentFee' as WaiveFeeTypesEnum,
        PenaltyFee: 'PenaltyFee' as WaiveFeeTypesEnum,
        SsrFee: 'SsrFee' as WaiveFeeTypesEnum,
        NonFlightServiceFee: 'NonFlightServiceFee' as WaiveFeeTypesEnum,
        UpgradeFee: 'UpgradeFee' as WaiveFeeTypesEnum,
        SeatFee: 'SeatFee' as WaiveFeeTypesEnum,
        BaseFare: 'BaseFare' as WaiveFeeTypesEnum,
        SpoilageFee: 'SpoilageFee' as WaiveFeeTypesEnum,
        NameChangeFee: 'NameChangeFee' as WaiveFeeTypesEnum,
        ConvenienceFee: 'ConvenienceFee' as WaiveFeeTypesEnum,
        BaggageFee: 'BaggageFee' as WaiveFeeTypesEnum,
        FareSurcharge: 'FareSurcharge' as WaiveFeeTypesEnum,
        PromotionDiscount: 'PromotionDiscount' as WaiveFeeTypesEnum,
        ServiceBundle: 'ServiceBundle' as WaiveFeeTypesEnum,
        ExtraBagFee: 'ExtraBagFee' as WaiveFeeTypesEnum,
        ATPCOBagFee: 'ATPCOBagFee' as WaiveFeeTypesEnum
    }
}
