/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import * as Models from '../models';
import { Dictionary } from '../models';
import * as Enums from '../enums';
import { getClient, Request } from '../helper';

import { AncillaryPricingOptionsContext } from '../model/ancillaryPricingOptionsContext';
import { IJsonResponse } from '../model/iJsonResponse';
import { InputParameters } from '../model/inputParameters';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class ApoService {

    constructor(@inject(HTTP_CLIENT) protected client: ApiHttpClient) {}

    /**
     * Deletes a single saved ancillary pricing option&#39;s data.
     * 
     * @param inputParameterKey The input parameter key to delete.
     
     */
    public apiNskV1ApoByInputParameterKeyDelete = (inputParameterKey: string, ) => {
        if (!inputParameterKey){
            throw new Error('Required parameter inputParameterKey was null or undefined when calling apiNskV1ApoByInputParameterKeyDelete.');
        }


            const requestObj: Request<{
                inputParameterKey: string, 
            }> = {
                url: '/api/nsk/v1/apo/${encodeURIComponent(String(inputParameterKey))}',
                method: 'delete',
                data: {
                    inputParameterKey,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Updates an individual saved ancillary pricing option&#39;s data.
     * This will replace the current saved ancillary pricing option&#39;s value with the  given input parameter value, based on the input parameter key.
     * @param inputParameterKey The input parameter key to update.
     * @param inputParameterValue The input parameter value to update.
     
     */
    public apiNskV1ApoByInputParameterKeyPut = (inputParameterKey: string, inputParameterValue?: string, ) => {
        if (!inputParameterKey){
            throw new Error('Required parameter inputParameterKey was null or undefined when calling apiNskV1ApoByInputParameterKeyPut.');
        }

        let queryParameters: string[] = [];
        if (inputParameterValue !== undefined) {
            queryParameters.push("inputParameterValue="+encodeURIComponent(String(inputParameterValue)));
        }


            const requestObj: Request<{
                inputParameterKey: string, inputParameterValue?: string, 
            }> = {
                url: '/api/nsk/v1/apo/${encodeURIComponent(String(inputParameterKey))}',
                method: 'put',
                data: {
                    inputParameterKey,inputParameterValue,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Deletes all of the saved ancillary pricing options data.
     * 
     
     */
    public apiNskV1ApoDelete = () => {

            const requestObj: Request<{
                
            }> = {
                url: '/api/nsk/v1/apo',
                method: 'delete',
                data: {
                    
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Gets the current saved ancillary pricing options data.
     * 
     
     */
    public apiNskV1ApoGet = () => {

            const requestObj: Request<{
                
            }> = {
                url: '/api/nsk/v1/apo',
                method: 'get',
                data: {
                    
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Adds new entries to the saved ancillary pricing options data.
     * 
     * @param inputParameters The input parameters to add.
     
     */
    public apiNskV1ApoPost = (inputParameters?: InputParameters, ) => {

            const requestObj: Request<{
                inputParameters?: InputParameters, 
            }> = {
                url: '/api/nsk/v1/apo',
                method: 'post',
                data: {
                    inputParameters,
                }
            };
            return this.client.makeRequest(requestObj);
    }

}
