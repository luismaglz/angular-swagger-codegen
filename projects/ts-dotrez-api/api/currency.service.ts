/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import * as Models from '../models';
import { Dictionary } from '../models';
import * as Enums from '../enums';
import { getClient, Request } from '../helper';

import { CurrencyConversion } from '../model/currencyConversion';
import { IJsonResponse } from '../model/iJsonResponse';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class CurrencyService {

    constructor(@inject(HTTP_CLIENT) protected client: ApiHttpClient) {}

    /**
     * Calculates currency conversions.
     * 
     * @param fromCurrencyCode The currency code that the amount is currently in.
     * @param toCurrencyCode The currency code we want the amount converted to.
     * @param amount The amount to be converted. This will be in the FromCurrencyCode currency.
     
     */
    public apiNskV1CurrencyConverterGet = (fromCurrencyCode: string, toCurrencyCode: string, amount: number, ) => {
        if (!fromCurrencyCode){
            throw new Error('Required parameter fromCurrencyCode was null or undefined when calling apiNskV1CurrencyConverterGet.');
        }

        if (!toCurrencyCode){
            throw new Error('Required parameter toCurrencyCode was null or undefined when calling apiNskV1CurrencyConverterGet.');
        }

        if (!amount){
            throw new Error('Required parameter amount was null or undefined when calling apiNskV1CurrencyConverterGet.');
        }

        let queryParameters: string[] = [];
        if (fromCurrencyCode !== undefined) {
            queryParameters.push("fromCurrencyCode="+encodeURIComponent(String(fromCurrencyCode)));
        }
        if (toCurrencyCode !== undefined) {
            queryParameters.push("toCurrencyCode="+encodeURIComponent(String(toCurrencyCode)));
        }
        if (amount !== undefined) {
            queryParameters.push("amount="+encodeURIComponent(String(amount)));
        }


            const requestObj: Request<{
                fromCurrencyCode: string, toCurrencyCode: string, amount: number, 
            }> = {
                url: '/api/nsk/v1/currency/converter',
                method: 'get',
                data: {
                    fromCurrencyCode,toCurrencyCode,amount,
                }
            };
            return this.client.makeRequest(requestObj);
    }

}
