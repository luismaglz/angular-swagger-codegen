/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import * as Models from '../models';
import { Dictionary } from '../models';
import * as Enums from '../enums';
import { getClient, Request } from '../helper';

import { BundleApplication } from '../model/bundleApplication';
import { BundleApplicationDetails } from '../model/bundleApplicationDetails';
import { BundleSetDetails } from '../model/bundleSetDetails';
import { IJsonResponse } from '../model/iJsonResponse';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class BundlesService {

    constructor(@inject(HTTP_CLIENT) protected client: ApiHttpClient) {}

    /**
     * Retrieves a specific bundle application&#39;s details.
     * See api/nsk/v1/resources/bundles/applications to retrieve the collection of  bundle application resources.
     * @param bundleApplicationKey The bundle application key.
     
     */
    public apiNskV1BundlesApplicationsByBundleApplicationKeyDetailsGet = (bundleApplicationKey: string, ) => {
        if (!bundleApplicationKey){
            throw new Error('Required parameter bundleApplicationKey was null or undefined when calling apiNskV1BundlesApplicationsByBundleApplicationKeyDetailsGet.');
        }


            const requestObj: Request<{
                bundleApplicationKey: string, 
            }> = {
                url: '/api/nsk/v1/bundles/applications/${encodeURIComponent(String(bundleApplicationKey))}/details',
                method: 'get',
                data: {
                    bundleApplicationKey,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Retrieves the list of bundle applications associated with  the bundle rule.
     * See api/nsk/v1/resources/bundles/rules to retrieve the collection of  bundle rule resources.
     * @param bundleRuleCode The bundle rule code.
     
     */
    public apiNskV1BundlesRulesByBundleRuleCodeDetailsGet = (bundleRuleCode: string, ) => {
        if (!bundleRuleCode){
            throw new Error('Required parameter bundleRuleCode was null or undefined when calling apiNskV1BundlesRulesByBundleRuleCodeDetailsGet.');
        }


            const requestObj: Request<{
                bundleRuleCode: string, 
            }> = {
                url: '/api/nsk/v1/bundles/rules/${encodeURIComponent(String(bundleRuleCode))}/details',
                method: 'get',
                data: {
                    bundleRuleCode,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Retrieves the list of bundle codes associated with the bundle set.
     * See api/nsk/v1/resources/bundles/sets to retrieve the collection of  bundle set resources.
     * @param bundleSetCode The bundle set code.
     
     */
    public apiNskV1BundlesSetsByBundleSetCodeDetailsGet = (bundleSetCode: string, ) => {
        if (!bundleSetCode){
            throw new Error('Required parameter bundleSetCode was null or undefined when calling apiNskV1BundlesSetsByBundleSetCodeDetailsGet.');
        }


            const requestObj: Request<{
                bundleSetCode: string, 
            }> = {
                url: '/api/nsk/v1/bundles/sets/${encodeURIComponent(String(bundleSetCode))}/details',
                method: 'get',
                data: {
                    bundleSetCode,
                }
            };
            return this.client.makeRequest(requestObj);
    }

}
