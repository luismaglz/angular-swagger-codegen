/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import * as Models from '../models';
import { Dictionary } from '../models';
import * as Enums from '../enums';
import { getClient, Request } from '../helper';

import { ActivityProduct } from '../model/activityProduct';
import { ActivitySimpleRequest } from '../model/activitySimpleRequest';
import { AddOn } from '../model/addOn';
import { CarProduct } from '../model/carProduct';
import { HotelProduct } from '../model/hotelProduct';
import { HotelRequest } from '../model/hotelRequest';
import { ProductRequest } from '../model/productRequest';
import { QuoteCarRequest } from '../model/quoteCarRequest';
import { QuoteHotelRequest } from '../model/quoteHotelRequest';
import { QuoteTokenRequest } from '../model/quoteTokenRequest';
import { QuotedProduct } from '../model/quotedProduct';
import { SellCarRequest } from '../model/sellCarRequest';
import { SellHotelRequest } from '../model/sellHotelRequest';
import { SellTokenRequest } from '../model/sellTokenRequest';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class AddOnsService {

    constructor(@inject(HTTP_CLIENT) protected client: ApiHttpClient) {}

    /**
     * Gets availability.
     * This is functionally a GET but POST is used to reduce URL length overhead.
     * @param request Activity simple query.
     
     */
    public apiNskV1AddOnsActivitiesAvailablePost = (request?: ActivitySimpleRequest, ) => {

            const requestObj: Request<{
                request?: ActivitySimpleRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/activities/available',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Sell request for an activity.
     * 
     * @param request Items request.
     
     */
    public apiNskV1AddOnsActivitiesPost = (request?: SellTokenRequest, ) => {

            const requestObj: Request<{
                request?: SellTokenRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/activities',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Quote an activity.
     * 
     * @param request Quote hotel request.
     
     */
    public apiNskV1AddOnsActivitiesQuotePost = (request?: QuoteTokenRequest, ) => {

            const requestObj: Request<{
                request?: QuoteTokenRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/activities/quote',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Gets availability.
     * This is functionally a GET but POST is used to reduce URL length overhead.
     * @param request Activity simple query.
     
     */
    public apiNskV1AddOnsCarsAvailablePost = (request?: ProductRequest, ) => {

            const requestObj: Request<{
                request?: ProductRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/cars/available',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Sell request for a car.
     * 
     * @param request Items request.
     
     */
    public apiNskV1AddOnsCarsPost = (request?: SellCarRequest, ) => {

            const requestObj: Request<{
                request?: SellCarRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/cars',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Quote car.
     * 
     * @param request Quote hotel request.
     
     */
    public apiNskV1AddOnsCarsQuotePost = (request?: QuoteCarRequest, ) => {

            const requestObj: Request<{
                request?: QuoteCarRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/cars/quote',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Gets availability.
     * This is functionally a GET but POST is used to reduce URL length overhead.
     * @param request Activity simple query.
     
     */
    public apiNskV1AddOnsHotelsAvailablePost = (request?: HotelRequest, ) => {

            const requestObj: Request<{
                request?: HotelRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/hotels/available',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Sell request for a hotel.
     * 
     * @param request Items request.
     
     */
    public apiNskV1AddOnsHotelsPost = (request?: SellHotelRequest, ) => {

            const requestObj: Request<{
                request?: SellHotelRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/hotels',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }


    /**
     * Quote hotel.
     * 
     * @param request Quote hotel request.
     
     */
    public apiNskV1AddOnsHotelsQuotePost = (request?: QuoteHotelRequest, ) => {

            const requestObj: Request<{
                request?: QuoteHotelRequest, 
            }> = {
                url: '/api/nsk/v1/addOns/hotels/quote',
                method: 'post',
                data: {
                    request,
                }
            };
            return this.client.makeRequest(requestObj);
    }

}
