/**
 * API - Current Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: trunk
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import { map, toPromise } from "rxjs";
import { inject, injectable } from "inversify";

import {
    HttpResponse,
    Headers,
    IHttpClient,
    AgencyCreationSettings, 
    BookingPaymentSettingsv2, 
    CheckInSettings, 
    CodesSettings, 
    ContactSettings, 
    CustomerAccountSettings, 
    CustomerCreationSettings, 
    FeeSettings, 
    FlightSearchSettings, 
    GeneralSettings, 
    IJsonResponse, 
    ItinerarySettings, 
    LogonSettings, 
    PassengerSettings, 
    PaymentSettings, 
    PremiumServicesSettingsv2, 
    ReserveFlightsSettings, 
    SessionSettings, 
    SkySpeedSettingsv2, 
} from 'api-models';

import {
        apiNskV1SettingsBookingCheckinGet,
        apiNskV1SettingsBookingContactGet,
        apiNskV1SettingsBookingCustomerAccountGet,
        apiNskV1SettingsBookingFeeGet,
        apiNskV1SettingsBookingFlightSearchGet,
        apiNskV1SettingsBookingGet,
        apiNskV1SettingsBookingPassengerGet,
        apiNskV1SettingsBookingReserveFlightsGet,
        apiNskV1SettingsGeneralApplicationLogonGet,
        apiNskV1SettingsGeneralCodesGet,
        apiNskV1SettingsGeneralSessionGet,
        apiNskV1SettingsItineraryGet,
        apiNskV1SettingsPaymentGet,
        apiNskV1SettingsUserAgencyCreationGet,
        apiNskV1SettingsUserCustomerCreationGet,
        apiNskV2SettingsBookingPaymentGet,
        apiNskV2SettingsPremiumServicesGet,
        apiNskV2SettingsSkySpeedGet,
} from '../base/api'




@injectable()
export class StoreSettingsService {

    constructor(@inject("Store") private store: Store<any>) {}

    /**
     * Get the checkin settings.
     * 
     */
    public async store_apiNskV1SettingsBookingCheckinGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<CheckInSettings>
    {
        const response = await apiNskV1SettingsBookingCheckinGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingCheckinGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the contact settings.
     * 
     */
    public async store_apiNskV1SettingsBookingContactGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<ContactSettings>
    {
        const response = await apiNskV1SettingsBookingContactGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingContactGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the custom account settings.
     * 
     */
    public async store_apiNskV1SettingsBookingCustomerAccountGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<CustomerAccountSettings>
    {
        const response = await apiNskV1SettingsBookingCustomerAccountGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingCustomerAccountGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the fee settings.
     * 
     */
    public async store_apiNskV1SettingsBookingFeeGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<FeeSettings>
    {
        const response = await apiNskV1SettingsBookingFeeGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingFeeGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the flight search settings.
     * 
     */
    public async store_apiNskV1SettingsBookingFlightSearchGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<FlightSearchSettings>
    {
        const response = await apiNskV1SettingsBookingFlightSearchGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingFlightSearchGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the general settings.
     * 
     */
    public async store_apiNskV1SettingsBookingGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<GeneralSettings>
    {
        const response = await apiNskV1SettingsBookingGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the passenger settings.
     * 
     */
    public async store_apiNskV1SettingsBookingPassengerGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<PassengerSettings>
    {
        const response = await apiNskV1SettingsBookingPassengerGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingPassengerGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the reserve flight settings.
     * 
     */
    public async store_apiNskV1SettingsBookingReserveFlightsGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<ReserveFlightsSettings>
    {
        const response = await apiNskV1SettingsBookingReserveFlightsGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsBookingReserveFlightsGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the logon settings.
     * 
     */
    public async store_apiNskV1SettingsGeneralApplicationLogonGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<LogonSettings>
    {
        const response = await apiNskV1SettingsGeneralApplicationLogonGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsGeneralApplicationLogonGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the codes settings.
     * 
     */
    public async store_apiNskV1SettingsGeneralCodesGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<CodesSettings>
    {
        const response = await apiNskV1SettingsGeneralCodesGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsGeneralCodesGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the session settings.
     * 
     */
    public async store_apiNskV1SettingsGeneralSessionGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<SessionSettings>
    {
        const response = await apiNskV1SettingsGeneralSessionGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV1SettingsGeneralSessionGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the itinerary settings.
     * 
     */
    public async store_apiNskV1SettingsItineraryGet(eTag?: string,  headers?: Headers): Promise<ItinerarySettings>
    {
        const response = await apiNskV1SettingsItineraryGet(eTag,'body', headers);
        // TODO: Implement apiNskV1SettingsItineraryGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the non role based payment settings.
     * 
     */
    public async store_apiNskV1SettingsPaymentGet(eTag?: string,  headers?: Headers): Promise<PaymentSettings>
    {
        const response = await apiNskV1SettingsPaymentGet(eTag,'body', headers);
        // TODO: Implement apiNskV1SettingsPaymentGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the agency creation settings.
     * 
     */
    public async store_apiNskV1SettingsUserAgencyCreationGet(eTag?: string,  headers?: Headers): Promise<AgencyCreationSettings>
    {
        const response = await apiNskV1SettingsUserAgencyCreationGet(eTag,'body', headers);
        // TODO: Implement apiNskV1SettingsUserAgencyCreationGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the customer creation settings.
     * 
     */
    public async store_apiNskV1SettingsUserCustomerCreationGet(eTag?: string,  headers?: Headers): Promise<CustomerCreationSettings>
    {
        const response = await apiNskV1SettingsUserCustomerCreationGet(eTag,'body', headers);
        // TODO: Implement apiNskV1SettingsUserCustomerCreationGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Get the role based booking payment settings.
     * 
     */
    public async store_apiNskV2SettingsBookingPaymentGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<BookingPaymentSettingsv2>
    {
        const response = await apiNskV2SettingsBookingPaymentGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV2SettingsBookingPaymentGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the premium services settings.
     * 
     */
    public async store_apiNskV2SettingsPremiumServicesGet(eTag?: string,  headers?: Headers): Promise<PremiumServicesSettingsv2>
    {
        const response = await apiNskV2SettingsPremiumServicesGet(eTag,'body', headers);
        // TODO: Implement apiNskV2SettingsPremiumServicesGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }


    /**
     * Retrieves the SkySpeed settings.
     * 
     */
    public async store_apiNskV2SettingsSkySpeedGet(eTag?: string, roleCode?: string,  headers?: Headers): Promise<SkySpeedSettingsv2>
    {
        const response = await apiNskV2SettingsSkySpeedGet(eTag,roleCode,'body', headers);
        // TODO: Implement apiNskV2SettingsSkySpeedGet
        // addResponsetoStore(this.store, response.data, true, true);
        return response;
    }

}
